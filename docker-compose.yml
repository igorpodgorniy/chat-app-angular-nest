version: '3.8'

services:
  api:
    build:
      dockerfile: Dockerfile
      context: ./api
      # Only build development stage from Dockerfile
      target: development
    # Mount our host direction to the docker container
    # Mount api directory (./api) to (:) docker container (/igorp/src/app)
    # Reflect file changes from host to container
    volumes:
      - ./api:/igorp/src/app:rw
      - /igorp/src/app/node_modules
    working_dir: /igorp/src/app
    # Run in dev mode
    command: npm run start:dev
    depends_on:
      - postgres
    environment:
      DATABASE_URL: postgres://user:password@postgres:5432/db
      NODE_ENV: development
      PORT: 3000
    ports:
      - 3000:3000
      - 9229:9229
    restart: unless-stopped

  frontend:
    build:
      dockerfile: Dockerfile
      context: ./frontend
      # Only build development stage from Dockerfile
      target: development
    # Mount our host direction to the docker container
    # Mount frontend directory (./frontend) to (:) docker container (/igorp/frontend/src/app)
    # Reflect file changes from host to container
    volumes:
      - ./frontend:/igorp/frontend/src/app:rw
      - /igorp/frontend/src/app/node_modules
    working_dir: /igorp/frontend/src/app
    # Run in dev mode
    command: npm run start
    ports:
      - 4200:4200
    links:
      - api
    restart: unless-stopped

  postgres:
    image: postgres:10.4
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: db
    container_name: postgres
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    ports:
      - 35000:5432

  postgres_admin:
    image: dpage/pgadmin4:4.28
    restart: always
    container_name: nest-pgadmin4
    depends_on:
      - postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: password
    ports:
      - 5050:80